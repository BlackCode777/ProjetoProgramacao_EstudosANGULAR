{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecursaoAlgoritmosRecursivosComponent {\n  /* https://www.ime.usp.br/~pf/algoritmos/aulas/recu.html */\n  constructor() {}\n  ngOnInit() {}\n}\nRecursaoAlgoritmosRecursivosComponent.ɵfac = function RecursaoAlgoritmosRecursivosComponent_Factory(t) {\n  return new (t || RecursaoAlgoritmosRecursivosComponent)();\n};\nRecursaoAlgoritmosRecursivosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecursaoAlgoritmosRecursivosComponent,\n  selectors: [[\"app-recursao-algoritmos-recursivos\"]],\n  decls: 36,\n  vars: 0,\n  consts: [[1, \"max-width-card\"], [1, \"card-algoritmo-recursao\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"card-text\"]],\n  template: function RecursaoAlgoritmosRecursivosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Estudo de recurs\\u00E3o com algoritmos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h5\", 4);\n      i0.ɵɵtext(7, \"O que \\u00E9 um Algoritmo de recurs\\u00E3o?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"p\", 6);\n      i0.ɵɵtext(10, \" Muitos problemas computacionais t\\u00EAm a seguinte propriedade: cada inst\\u00E2ncia do problema cont\\u00E9m uma inst\\u00E2ncia menor do mesmo problema. Dizemos que esses problemas t\\u00EAm estrutura recursiva. Para resolver uma inst\\u00E2ncia de um problema desse tipo, podemos aplicar o seguinte m\\u00E9todo: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"ul\")(13, \"li\");\n      i0.ɵɵtext(14, \"Se a inst\\u00E2ncia \\u00E9 pequena, resolva-a diretamente (caso base). \");\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16, \"resolva-a diretamente (use for\\u00E7a bruta se necess\\u00E1rio);\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"li\");\n      i0.ɵɵtext(18, \"Se a inst\\u00E2ncia \\u00E9 grande, reduza-a a uma inst\\u00E2ncia menor do mesmo problema (caso recursivo). \");\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20, \"reduza-a a uma inst\\u00E2ncia menor do mesmo problema, aplique o m\\u00E9todo \\u00E0 inst\\u00E2ncia menor, volte \\u00E0 inst\\u00E2ncia original.\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 1)(23, \"div\", 2)(24, \"div\", 3)(25, \"h5\", 4);\n      i0.ɵɵtext(26, \"Exemplo de algoritmo de recurs\\u00E3o\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 5)(28, \"p\", 6);\n      i0.ɵɵtext(29, \" Um exemplo de algoritmo recursivo \\u00E9 o c\\u00E1lculo do fatorial de um n\\u00FAmero. O fatorial de um n\\u00FAmero n \\u00E9 o produto de todos os n\\u00FAmeros inteiros positivos menores ou iguais a n. O fatorial de n \\u00E9 denotado por n!. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\")(31, \"ul\")(32, \"li\");\n      i0.ɵɵtext(33, \"Se n = 0, ent\\u00E3o n! = 1.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"li\");\n      i0.ɵɵtext(35, \"Se n > 0, ent\\u00E3o n! = n * (n-1)!.\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  styles: [\"@charset \\\"UTF-8\\\";\\n.max-width-card[_ngcontent-%COMP%] {\\n  padding: 2em;\\n  max-width: 1000px;\\n  \\n  flex-direction: column;\\n  \\n}\\n.max-width-card   [_nghost-%COMP%] {\\n  \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  \\n}\\n.max-width-card   [_nghost-%COMP%]   h4[_ngcontent-%COMP%] {\\n  padding: 1em;\\n  font-size: 2rem;\\n  font-weight: 700;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.max-width-card   [_nghost-%COMP%]   .card-algoritmo-recursao[_ngcontent-%COMP%] {\\n  \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  padding-left: 2em;\\n  padding-right: 2em;\\n  padding-bottom: 1em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVjdXJzYW8tYWxnb3JpdG1vcy1yZWN1cnNpdm9zL3JlY3Vyc2FvLWFsZ29yaXRtb3MtcmVjdXJzaXZvcy9yZWN1cnNhby1hbGdvcml0bW9zLXJlY3Vyc2l2b3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCO0VBQ0UsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsOEJBQUE7RUFDQSxzQkFBQTtFQUVBLGtEQUFBO0FBQ0Y7QUFBRTtFQUNFLDhCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFFQSx5QkFBQTtBQUNKO0FBQUk7RUFDRSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFFTjtBQUFJO0VBQ0UsdUNBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBRU4iLCJzb3VyY2VzQ29udGVudCI6WyIubWF4LXdpZHRoLWNhcmQge1xyXG4gIHBhZGRpbmc6IDJlbTtcclxuICBtYXgtd2lkdGg6IDEwMDBweDtcclxuICAvKiBDZW50cmFsaXphbmRvIG5hIHZlcnRpY2FsICovXHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgLyogZXNwYcODwqdhbmRvIGEgY2FpeGEgZW0gdG9kb3Mgb3MgbGFkb3MgZGEgcMODwqFnaW5hICovXHJcbiAgOmhvc3Qge1xyXG4gICAgLyogQ2VudHJhbGl6YW5kbyBuYSB2ZXJ0aWNhbCAqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICAvKiBFc3RpbGl6YW5kbyBvIHTDg8KtdHVsbyAqL1xyXG4gICAgaDQge1xyXG4gICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICAuY2FyZC1hbGdvcml0bW8tcmVjdXJzYW8ge1xyXG4gICAgICAvKiBjZW50cmFsaXphbmRvIG8gY2FyZCBuYSBob3Jpem9udGFsICovXHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcclxuICAgICAgcGFkZGluZy1yaWdodDogMmVtO1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,qCAAqC;EAChD;EAEAC,eAAc;EACdC,QAAQ,IAAU;;AAJPF,qCAAqC;mBAArCA,qCAAqC;AAAA;AAArCA,qCAAqC;QAArCA,qCAAqC;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPlDC,8BAA4B;MACpBA,sDAAiC;MAAAA,iBAAK;MAC1CA,8BAAqC;MAIFA,2DAAiC;MAAAA,iBAAK;MAEjEA,8BAAuB;MAEfA,yUAIJ;MAAAA,iBAAI;MAGRA,4BAAK;MAEOA,wFACA;MAAAA,0BAAG;MAAAA,iFAAsD;MAAAA,iBAAI;MAEjEA,2BAAI;MAAAA,4HACA;MAAAA,0BAAG;MAAAA,gKAE4B;MAAAA,iBAAI;MAM3DA,sBAAI;MACAA,+BAAqC;MAIFA,sDAAgC;MAAAA,iBAAK;MAEhEA,+BAAuB;MAEfA,oQAGJ;MAAAA,iBAAI;MAGRA,4BAAK;MAEOA,6CAAuB;MAAAA,iBAAK;MAChCA,2BAAI;MAAAA,sDAAgC;MAAAA,iBAAK","names":["RecursaoAlgoritmosRecursivosComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos.component.ts","E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recursao-algoritmos-recursivos',\r\n  templateUrl: './recursao-algoritmos-recursivos.component.html',\r\n  styleUrls: ['./recursao-algoritmos-recursivos.component.scss']\r\n})\r\nexport class RecursaoAlgoritmosRecursivosComponent {\r\n  /* https://www.ime.usp.br/~pf/algoritmos/aulas/recu.html */\r\n\r\n  constructor(){}\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<div class=\"max-width-card\">\r\n    <h4>Estudo de recursão com algoritmos</h4>\r\n    <div class=\"card-algoritmo-recursao\">\r\n        <!--Criando um card -  para explicar o que é um algoritmo recursivo -->\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"card-title\">O que é um Algoritmo de recursão?</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p class=\"card-text\">\r\n                    Muitos problemas computacionais têm a seguinte propriedade: cada instância do \r\n                    problema contém uma instância menor do mesmo problema. Dizemos que esses problemas \r\n                    têm estrutura recursiva.  Para resolver uma instância de um problema desse tipo, \r\n                    podemos aplicar o seguinte método:\r\n                </p>\r\n            </div>\r\n            <!--Criando lista-->\r\n            <div>\r\n                <ul>\r\n                    <li>Se a instância é pequena, resolva-a diretamente (caso base).\r\n                        <p>resolva-a diretamente (use força bruta se necessário);</p>\r\n                    </li>\r\n                    <li>Se a instância é grande, reduza-a a uma instância menor do mesmo problema (caso recursivo).\r\n                        <p>reduza-a a uma instância menor do mesmo problema,\r\n                            aplique o método à instância menor,\r\n                            volte à instância original.</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<br>\r\n    <div class=\"card-algoritmo-recursao\">\r\n        <!--Criando um card -  para explicar o que é um algoritmo recursivo -->\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                <h5 class=\"card-title\">Exemplo de algoritmo de recursão</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <p class=\"card-text\">\r\n                    Um exemplo de algoritmo recursivo é o cálculo do fatorial de um número. \r\n                    O fatorial de um número n é o produto de todos os números inteiros positivos \r\n                    menores ou iguais a n. O fatorial de n é denotado por n!.\r\n                </p>\r\n            </div>\r\n            <!--Criando lista-->\r\n            <div>\r\n                <ul>\r\n                    <li>Se n = 0, então n! = 1.</li>\r\n                    <li>Se n > 0, então n! = n * (n-1)!.</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}