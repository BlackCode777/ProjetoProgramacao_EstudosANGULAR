{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AlgoritmosComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const algoritmo_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.funcaoLogN_Multiplicacao(algoritmo_r2.N));\n  }\n}\nfunction AlgoritmosComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const algoritmo_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(algoritmo_r3.N);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(algoritmo_r3.log_N);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(algoritmo_r3._log_N_);\n  }\n}\nexport class AlgoritmosComponent {\n  constructor() {\n    this.algoritmos = [{\n      N: '10',\n      log_N: '3.322',\n      _log_N_: '3'\n    }, {\n      N: '100',\n      log_N: '6.644',\n      _log_N_: '7'\n    }, {\n      N: '1000',\n      log_N: '9.966',\n      _log_N_: '10'\n    }, {\n      N: '10000',\n      log_N: '13.288',\n      _log_N_: '13'\n    }, {\n      N: '100000',\n      log_N: '16.611',\n      _log_N_: '17'\n    }, {\n      N: '1000000',\n      log_N: '19.933',\n      _log_N_: '20'\n    }, {\n      N: '10000000',\n      log_N: '23.255',\n      _log_N_: '23'\n    }, {\n      N: '100000000',\n      log_N: '26.578',\n      _log_N_: '27'\n    }];\n  }\n  NgModule() {\n    this.funcaoLogN_Multiplicacao(this.algoritmos.N);\n  }\n  /*\r\n  O logaritmo na base 2 de um número N é o expoente a que 2 deve ser elevado\r\n  para produzir N.  O logaritmo na base 2 de N é denotado por log N.  É claro\r\n  que log N só está definido se N é estritamente positivo.\r\n  */\n  // creating function for calculate logarithm base 2 N, log N, number positive\n  funcaoLogN_Multiplicacao(N) {\n    let i = 0;\n    let n = 1;\n    while (n <= N / 2) {\n      n = 2 * n;\n      i += 1;\n    }\n    return i;\n  }\n}\nAlgoritmosComponent.ɵfac = function AlgoritmosComponent_Factory(t) {\n  return new (t || AlgoritmosComponent)();\n};\nAlgoritmosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AlgoritmosComponent,\n  selectors: [[\"app-algoritmos\"]],\n  decls: 18,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"box\"], [1, \"box-header\", \"box-title\", \"text-center\"], [1, \"\"], [1, \"box-body\", \"box-title\", \"text-center\"], [\"id\", \"example1\", 1, \"table\", \"table-bordered\", \"table-striped\"]],\n  template: function AlgoritmosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AlgoritmosComponent_div_0_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"hr\");\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"h3\", 3);\n      i0.ɵɵtext(5, \"Algoritmos Estudos\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"table\", 5)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"N\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"log N\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"\\u230Alog N\\u230B\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, AlgoritmosComponent_tr_17_Template, 7, 3, \"tr\", 0);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.algoritmos);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.algoritmos);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"@charset \\\"UTF-8\\\";\\n\\n[_nghost-%COMP%] {\\n  \\n  \\n  \\n  margin: 0 auto;\\n  \\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  max-width: 60%;\\n  display: block;\\n  padding: 2rem;\\n  \\n}\\n[_nghost-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 2rem;\\n  font-weight: 700;\\n  margin-bottom: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWxnb3JpdG1vcy9hbGdvcml0bW9zL2FsZ29yaXRtb3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCLGtEQUFBO0FBQ0E7RUFDSSxzRkFBQTtFQUVBLG9FQUFBO0VBQ0EsZ0NBQUE7RUFDQSxjQUFBO0VBQ0EsOEJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUVBLHlCQUFBO0FBQUo7QUFDSTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FBQ1IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc3Bhw4PCp2FuZG8gYSBjYWl4YSBlbSB0b2RvcyBvcyBsYWRvcyBkYSBww4PCoWdpbmEgKi9cbjpob3N0IHtcbiAgICAvKkNyaWFuZG8gZnVuZG8gZW0gZGVncmFkw4PCqiBkZSAzIGNvcmVzIHBhcmEgYSB0ZWxhIGludGVpcmEgcHJlZW5jaGVuZG8gdG9kYXMgYXMgcGFydGVzKi9cbiAgICAvLyBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMwMGJmZmYsICMwMGZmZmYsICMwMDUxZmYpO1xuICAgIC8qYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMDBiZmZmLCAjMDBmZmZmLCAjMDA1MWZmKTsqL1xuICAgIC8qIENlbnRyYWxpemFuZG8gbmEgaG9yaXpvbnRhbCAqL1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIC8qIENlbnRyYWxpemFuZG8gbmEgdmVydGljYWwgKi9cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IDYwJTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAycmVtO1xuXG4gICAgLyogRXN0aWxpemFuZG8gbyB0w4PCrXR1bG8gKi9cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICB9XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;IACAA,2BAA0C;IACrCA,YAA2C;IAAAA,iBAAI;;;;;IAA/CA,eAA2C;IAA3CA,qEAA2C;;;;;IAqBxCA,0BAA0C;IACpCA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;;;;IAF1BA,eAAe;IAAfA,oCAAe;IACfA,eAAmB;IAAnBA,wCAAmB;IACnBA,eAAqB;IAArBA,0CAAqB;;;ACnBnC,OAAM,MAAOC,mBAAmB;EAa9BC;IAXA,eAAU,GAAe,CACvB;MAAEC,CAAC,EAAE,IAAI;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAG,CAAE,EACzC;MAAEF,CAAC,EAAE,KAAK;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAG,CAAE,EAC1C;MAAEF,CAAC,EAAE,MAAM;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAI,CAAE,EAC5C;MAAEF,CAAC,EAAE,OAAO;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EAC9C;MAAEF,CAAC,EAAE,QAAQ;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EAC/C;MAAEF,CAAC,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EAChD;MAAEF,CAAC,EAAE,UAAU;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EACjD;MAAEF,CAAC,EAAE,WAAW;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,CACnD;EAEe;EAChBC,QAAQ;IACT,IAAI,CAACC,wBAAwB,CAAE,IAAI,CAACC,UAAU,CAACL,CAAC,CAAE;EACjD;EAEA;;;;;EAKD;EACAI,wBAAwB,CAAEJ,CAAS;IACnC,IAAIM,CAAC,GAAG,CAAC;IACT,IAAIC,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,IAAIP,CAAC,GAAC,CAAC,EAAE;MAChBO,CAAC,GAAG,CAAC,GAAGA,CAAC;MACTD,CAAC,IAAI,CAAC;;IAEP,OAAOA,CAAC;EACR;;AAhCYR,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDNhCf,oEAEM;MAGNA,qBAAI;MAEJA,8BAAiB;MAGAA,kCAAkB;MAAAA,iBAAK;MAEtCA,8BAA4C;MAIhCA,kBAAC;MAAAA,iBAAK;MACVA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,kCAAO;MAAAA,iBAAK;MAGpBA,8BAAO;MACLA,oEAIK;MACPA,iBAAQ;;;MA3BaA,wCAAa;MAsBNA,gBAAa;MAAbA,wCAAa","names":["i0","AlgoritmosComponent","constructor","N","log_N","_log_N_","NgModule","funcaoLogN_Multiplicacao","algoritmos","i","n","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\algoritmos\\algoritmos\\algoritmos.component.html","E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\algoritmos\\algoritmos\\algoritmos.component.ts"],"sourcesContent":["\n<div *ngFor=\"let algoritmo of algoritmos\">\n  <p>{{ funcaoLogN_Multiplicacao(algoritmo.N) }}</p>\n</div>\n\n\n<hr>\n\n<div class=\"box\">\n  <div class=\"box-header box-title text-center\">\n    <!--Centralizar o título no centro da página na hozontal usando bootstrap-->\n    <h3 class=\"\">Algoritmos Estudos</h3>\n  </div>\n  <div class=\"box-body box-title text-center\">\n    <table id=\"example1\" class=\"table table-bordered table-striped\">\n      <thead>\n        <tr>\n          <th>N</th>\n          <th>log N</th>\n          <th>⌊log N⌋</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let algoritmo of algoritmos\" >\n          <td>{{algoritmo.N}}</td>\n          <td>{{algoritmo.log_N}}</td>\n          <td>{{algoritmo._log_N_}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n","import { Component, NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-algoritmos',\n  templateUrl: './algoritmos.component.html',\n  styleUrls: ['./algoritmos.component.scss']\n})\nexport class AlgoritmosComponent {\n\n  algoritmos: Array<any> = [ \n    { N: '10', log_N: '3.322', _log_N_: '3' },\n    { N: '100', log_N: '6.644', _log_N_: '7' },\n    { N: '1000', log_N: '9.966', _log_N_: '10' },\n    { N: '10000', log_N: '13.288', _log_N_: '13' },\n    { N: '100000', log_N: '16.611', _log_N_: '17' },\n    { N: '1000000', log_N: '19.933', _log_N_: '20' },\n    { N: '10000000', log_N: '23.255', _log_N_: '23' },\n    { N: '100000000', log_N: '26.578', _log_N_: '27' },\n  ];\n\n  constructor() { }\n  NgModule() {\n\tthis.funcaoLogN_Multiplicacao( this.algoritmos.N );\n  }\n\n  /*\n  O logaritmo na base 2 de um número N é o expoente a que 2 deve ser elevado \n  para produzir N.  O logaritmo na base 2 de N é denotado por log N.  É claro \n  que log N só está definido se N é estritamente positivo.\n  */\n // creating function for calculate logarithm base 2 N, log N, number positive\n funcaoLogN_Multiplicacao( N: number ){\t\n\tlet i = 0;\n\tlet n = 1;\n\twhile (n <= N/2) {\n\t\tn = 2 * n;\n\t\ti += 1;\n\t}\n\treturn i;\n }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}