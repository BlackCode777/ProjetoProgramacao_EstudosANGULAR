{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RecursaoAlgoritmosRecursivosComponent = class RecursaoAlgoritmosRecursivosComponent {\n  constructor() {\n    /* https://www.ime.usp.br/~pf/algoritmos/aulas/recu.html */\n    /*Definindo um vetor*/\n    this.vetor = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    /*Definindo o tamanho do vetor*/\n    this.n = 7;\n  }\n  ngOnInit() {}\n  /*Definindo uma função que encontra o maior elemento dentro de um vetor*/\n  maiorElementoDentroDeUmVetor(vetor, n) {\n    /*Caso base*/\n    if (n == 1) {\n      return vetor[0];\n    }\n    /*Chamada recursiva*/else {\n      return Math.max(vetor[n - 1], this.maiorElementoDentroDeUmVetor(vetor, n - 1));\n    }\n  }\n};\nRecursaoAlgoritmosRecursivosComponent = __decorate([Component({\n  selector: 'app-recursao-algoritmos-recursivos',\n  templateUrl: './recursao-algoritmos-recursivos.component.html',\n  styleUrls: ['./recursao-algoritmos-recursivos.component.scss']\n})], RecursaoAlgoritmosRecursivosComponent);\nexport { RecursaoAlgoritmosRecursivosComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,qCAAqC,GAA3C,MAAMA,qCAAqC;EAQhDC;IAPA;IAEA;IACA,UAAK,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC;IAC9B;IACA,MAAC,GAAG,CAAC;EAES;EACdC,QAAQ,IAAU;EAElB;EACAC,4BAA4B,CAACC,KAAe,EAAEC,CAAS;IACrD;IACA,IAAGA,CAAC,IAAI,CAAC,EAAC;MACR,OAAOD,KAAK,CAAC,CAAC,CAAC;;IAEjB,0BACI;MACF,OAAOE,IAAI,CAACC,GAAG,CAACH,KAAK,CAACC,CAAC,GAAC,CAAC,CAAC,EAAE,IAAI,CAACF,4BAA4B,CAACC,KAAK,EAAEC,CAAC,GAAC,CAAC,CAAC,CAAC;;EAE9E;CAED;AAvBYL,qCAAqC,eALjDD,SAAS,CAAC;EACTS,QAAQ,EAAE,oCAAoC;EAC9CC,WAAW,EAAE,iDAAiD;EAC9DC,SAAS,EAAE,CAAC,iDAAiD;CAC9D,CAAC,GACWV,qCAAqC,CAuBjD;SAvBYA,qCAAqC","names":["Component","RecursaoAlgoritmosRecursivosComponent","constructor","ngOnInit","maiorElementoDentroDeUmVetor","vetor","n","Math","max","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recursao-algoritmos-recursivos',\r\n  templateUrl: './recursao-algoritmos-recursivos.component.html',\r\n  styleUrls: ['./recursao-algoritmos-recursivos.component.scss']\r\n})\r\nexport class RecursaoAlgoritmosRecursivosComponent {\r\n  /* https://www.ime.usp.br/~pf/algoritmos/aulas/recu.html */\r\n\r\n  /*Definindo um vetor*/\r\n  vetor = [1,2,3,4,5,6,7,8,9,10];\r\n  /*Definindo o tamanho do vetor*/\r\n  n = 7;\r\n\r\n  constructor(){}\r\n  ngOnInit(): void {}\r\n\r\n  /*Definindo uma função que encontra o maior elemento dentro de um vetor*/\r\n  maiorElementoDentroDeUmVetor(vetor: number[], n: number): number{ \r\n    /*Caso base*/\r\n    if(n == 1){\r\n      return vetor[0];\r\n    }\r\n    /*Chamada recursiva*/\r\n    else{\r\n      return Math.max(vetor[n-1], this.maiorElementoDentroDeUmVetor(vetor, n-1));\r\n    }\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}