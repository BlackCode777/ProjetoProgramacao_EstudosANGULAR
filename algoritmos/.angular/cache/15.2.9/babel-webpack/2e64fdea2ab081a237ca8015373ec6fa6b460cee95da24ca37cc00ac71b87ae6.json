{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RecursaoAlgoritmosRecursivosComponent {\n  constructor() {\n    /* https://www.ime.usp.br/~pf/algoritmos/aulas/recu.html */\n    /*Definindo um vetor*/\n    this.vetor = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    this.vetor1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    /*Definindo o tamanho do vetor*/\n    this.n = 7;\n    this.n1 = 10;\n  }\n  ngOnInit() {}\n  /* 7. Critique a seguinte função recursiva que promete encontrar o valor de um elemento máximo de v[0..n-1]*/\n  funcaoEncontraValorElementoMaximo(n, vetor) {\n    // Se o n for == 1\n    if (n == 1) {\n      return vetor[0];\n    }\n    // Se o n for == 2\n    if (n == 2) {\n      if (vetor[0] < vetor[1]) {\n        return vetor[1];\n      } else {\n        return vetor[0];\n      }\n    }\n  }\n  /*Definindo uma função que encontra o maior elemento dentro de um vetor*/\n  /* Formas diferentes de escrever uma função com recursividade */\n  maiorElementoDentroDeUmVetor(vetor, n) {\n    /*Caso base*/\n    if (n == 1) {\n      return vetor[0];\n    }\n    let maior = this.maiorElementoDentroDeUmVetor(vetor, n - 1);\n    if (maior > vetor[n - 1]) {\n      return maior;\n    } else {\n      return vetor[n - 1];\n    }\n    /*Chamada recursiva*/\n    // else{\n    //   return Math.max(vetor[n-1], this.maiorElementoDentroDeUmVetor(vetor, n-1));\n    // }\n  }\n}\n\nRecursaoAlgoritmosRecursivosComponent.ɵfac = function RecursaoAlgoritmosRecursivosComponent_Factory(t) {\n  return new (t || RecursaoAlgoritmosRecursivosComponent)();\n};\nRecursaoAlgoritmosRecursivosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecursaoAlgoritmosRecursivosComponent,\n  selectors: [[\"app-recursao-algoritmos-recursivos\"]],\n  decls: 52,\n  vars: 2,\n  consts: [[1, \"max-width-card\"], [1, \"card-algoritmo-recursao\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"card-text\"], [1, \"card-algoritmo-recursao2\"], [1, \"card-algoritmo-recursao3\"], [1, \"card\", \"card-result\"], [1, \"color-number\"]],\n  template: function RecursaoAlgoritmosRecursivosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Estudo de recurs\\u00E3o com algoritmos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h5\", 4);\n      i0.ɵɵtext(7, \"O que \\u00E9 um Algoritmo de recurs\\u00E3o?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"p\", 6);\n      i0.ɵɵtext(10, \" Muitos problemas computacionais t\\u00EAm a seguinte propriedade: cada inst\\u00E2ncia do problema cont\\u00E9m uma inst\\u00E2ncia menor do mesmo problema. Dizemos que esses problemas t\\u00EAm estrutura recursiva. Para resolver uma inst\\u00E2ncia de um problema desse tipo, podemos aplicar o seguinte m\\u00E9todo: \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"ul\")(13, \"li\");\n      i0.ɵɵtext(14, \" Se a inst\\u00E2ncia \\u00E9 pequena, resolva-a diretamente (caso base). \");\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16, \"resolva-a diretamente (use for\\u00E7a bruta se necess\\u00E1rio);\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"li\");\n      i0.ɵɵtext(18, \" Se a inst\\u00E2ncia \\u00E9 grande, reduza-a a uma inst\\u00E2ncia menor do mesmo problema (caso recursivo). \");\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20, \" reduza-a a uma inst\\u00E2ncia menor do mesmo problema, aplique o m\\u00E9todo \\u00E0 inst\\u00E2ncia menor, volte \\u00E0 inst\\u00E2ncia original. \");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"div\", 2)(24, \"div\", 3)(25, \"h5\", 4);\n      i0.ɵɵtext(26, \"Exemplo de algoritmo de recurs\\u00E3o\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 5)(28, \"p\", 6);\n      i0.ɵɵtext(29, \" Um exemplo de algoritmo recursivo \\u00E9 o c\\u00E1lculo do fatorial de um n\\u00FAmero. O fatorial de um n\\u00FAmero n \\u00E9 o produto de todos os n\\u00FAmeros inteiros positivos menores ou iguais a n. O fatorial de n \\u00E9 denotado por n!. \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\")(31, \"ul\")(32, \"li\");\n      i0.ɵɵtext(33, \"Se n = 0, ent\\u00E3o n! = 1.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"li\");\n      i0.ɵɵtext(35, \"Se n > 0, ent\\u00E3o n! = n * (n-1)!.\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"p\", 6);\n      i0.ɵɵtext(37, \" Para ilustrar o conceito de algoritmo recursivo, considere o seguinte problema: Encontrar o valor de um elemento m\\u00E1ximo de um vetor v[0..n-1]. (O problema j\\u00E1 foi mencionado num dos exerc\\u00EDcios na p\\u00E1gina Vetores.) Observe que o problema s\\u00F3 faz sentido se o vetor n\\u00E3o \\u00E9 vazio, ou seja, se n \\u2265 1. Eis uma fun\\u00E7\\u00E3o recursiva que resolve o problema: \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(38, \"br\");\n      i0.ɵɵelementStart(39, \"div\", 8)(40, \"div\", 9)(41, \"div\")(42, \"p\");\n      i0.ɵɵtext(43, \"Resultado: maiorElementoDentroDeUmVetor()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"p\", 10);\n      i0.ɵɵtext(45);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(46, \"div\", 9)(47, \"div\")(48, \"p\");\n      i0.ɵɵtext(49, \"Resultado: maiorElementoDentroDeUmVetor()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"p\", 10);\n      i0.ɵɵtext(51);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(45);\n      i0.ɵɵtextInterpolate(ctx.maiorElementoDentroDeUmVetor(ctx.vetor, ctx.n));\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.maiorElementoDentroDeUmVetor(ctx.vetor1, ctx.n1));\n    }\n  },\n  styles: [\"@charset \\\"UTF-8\\\";\\n.max-width-card[_ngcontent-%COMP%] {\\n  padding: 2em;\\n  max-width: 1000px;\\n  flex-direction: column;\\n  \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  \\n}\\n.max-width-card[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  padding: 1em;\\n  font-size: 2rem;\\n  font-weight: 700;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.max-width-card[_ngcontent-%COMP%]   .card-algoritmo-recursao[_ngcontent-%COMP%] {\\n  \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  padding-left: 2em;\\n  padding-right: 2em;\\n  padding-bottom: 1em;\\n}\\n.max-width-card[_ngcontent-%COMP%]   .card-algoritmo-recursao2[_ngcontent-%COMP%] {\\n  \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  padding-left: 2em;\\n  padding-right: 2em;\\n  padding-bottom: 1em;\\n}\\n.max-width-card[_ngcontent-%COMP%]   .card-algoritmo-recursao3[_ngcontent-%COMP%] {\\n  \\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: row;\\n  margin-left: 5px;\\n}\\n.max-width-card[_ngcontent-%COMP%]   .card-algoritmo-recursao3[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n  \\n  background: linear-gradient(45deg, #9602f8, #44ff00);\\n  max-width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 1em;\\n  \\n  flex-direction: column;\\n}\\n.max-width-card[_ngcontent-%COMP%]   .card-algoritmo-recursao3[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .color-number[_ngcontent-%COMP%] {\\n  color: aliceblue;\\n  font-size: 30px;\\n  font-weight: 700;\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVjdXJzYW8tYWxnb3JpdG1vcy1yZWN1cnNpdm9zL3JlY3Vyc2FvLWFsZ29yaXRtb3MtcmVjdXJzaXZvcy9yZWN1cnNhby1hbGdvcml0bW9zLXJlY3Vyc2l2b3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCO0VBQ0UsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esc0JBQUE7RUFDQSw4QkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBRUEseUJBQUE7QUFDRjtBQUFFO0VBQ0UsWUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBRUo7QUFBRTtFQUNFLHVDQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQUVKO0FBQUU7RUFDRSx1Q0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUFFSjtBQUFFO0VBQ0UsdUNBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFFSjtBQURJO0VBQ0UsaUJBQUE7RUFDQSxxQkFBQTtFQUNBLG9EQUFBO0VBQ0EsZUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7QUFHTjtBQURHO0VBQ0QsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQ0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtBQUdGIiwic291cmNlc0NvbnRlbnQiOlsiLm1heC13aWR0aC1jYXJkIHtcclxuICBwYWRkaW5nOiAyZW07XHJcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAvKiBDZW50cmFsaXphbmRvIG5hIHZlcnRpY2FsICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAvKiBFc3RpbGl6YW5kbyBvIHTDg8KtdHVsbyAqL1xyXG4gIGg0IHtcclxuICAgIHBhZGRpbmc6IDFlbTtcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuICAuY2FyZC1hbGdvcml0bW8tcmVjdXJzYW8ge1xyXG4gICAgLyogY2VudHJhbGl6YW5kbyBvIGNhcmQgbmEgaG9yaXpvbnRhbCAqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDJlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgfVxyXG4gIC5jYXJkLWFsZ29yaXRtby1yZWN1cnNhbzIge1xyXG4gICAgLyogY2VudHJhbGl6YW5kbyBvIGNhcmQgbmEgaG9yaXpvbnRhbCAqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDJlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgfVxyXG4gIC5jYXJkLWFsZ29yaXRtby1yZWN1cnNhbzMge1xyXG4gICAgLyogY2VudHJhbGl6YW5kbyBvIGNhcmQgbmEgaG9yaXpvbnRhbCAqL1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgLmNhcmQge1xyXG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgICAgLypCYWNrZ3JvdW5kIGRlZ3JhZMODwqoqL1xyXG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICM5NjAyZjgsICM0NGZmMDApO1xyXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgIC8qYWxpbmhhbWVudG8gZW0gY29sdW5hcyovXHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG5cdCAgLmNvbG9yLW51bWJlcntcclxuXHRcdGNvbG9yOiBhbGljZWJsdWU7XHJcblx0XHRmb250LXNpemU6IDMwcHg7XHJcblx0XHRmb250LXdlaWdodDogNzAwO1xyXG5cdFx0Zm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdCAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,qCAAqC;EAUhDC;IATA;IAEA;IACA,UAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACvC,WAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5D;IACA,MAAC,GAAG,CAAC;IACL,OAAE,GAAG,EAAE;EAEQ;EACfC,QAAQ,IAAU;EAElB;EACAC,iCAAiC,CAACC,CAAS,EAAEC,KAAe;IAC1D;IACA,IAAID,CAAC,IAAI,CAAC,EAAE;MACV,OAAOC,KAAK,CAAC,CAAC,CAAC;;IAEjB;IACA,IAAID,CAAC,IAAI,CAAC,EAAE;MACV,IAAIC,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,EAAE;QACvB,OAAOA,KAAK,CAAC,CAAC,CAAC;OAChB,MAAM;QACL,OAAOA,KAAK,CAAC,CAAC,CAAC;;;EAGrB;EAEA;EACA;EACAC,4BAA4B,CAACD,KAAe,EAAED,CAAS;IACrD;IACA,IAAIA,CAAC,IAAI,CAAC,EAAE;MACV,OAAOC,KAAK,CAAC,CAAC,CAAC;;IAGjB,IAAIE,KAAK,GAAG,IAAI,CAACD,4BAA4B,CAACD,KAAK,EAAED,CAAC,GAAG,CAAC,CAAC;IAC3D,IAAIG,KAAK,GAAGF,KAAK,CAACD,CAAC,GAAG,CAAC,CAAC,EAAE;MACxB,OAAOG,KAAK;KACb,MAAM;MACL,OAAOF,KAAK,CAACD,CAAC,GAAG,CAAC,CAAC;;IAGrB;IACA;IACA;IACA;EACF;;;AAhDWJ,qCAAqC;mBAArCA,qCAAqC;AAAA;AAArCA,qCAAqC;QAArCA,qCAAqC;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPlDC,8BAA4B;MACtBA,sDAAiC;MAAAA,iBAAK;MAC1CA,8BAAqC;MAIRA,2DAAiC;MAAAA,iBAAK;MAE/DA,8BAAuB;MAEnBA,yUAKF;MAAAA,iBAAI;MAGNA,4BAAK;MAGCA,yFACA;MAAAA,0BAAG;MAAAA,iFAAsD;MAAAA,iBAAI;MAE/DA,2BAAI;MACFA,6HAEA;MAAAA,0BAAG;MACDA,kKAEF;MAAAA,iBAAI;MAMdA,sBAAM;MACNA,+BAAsC;MAITA,sDAAgC;MAAAA,iBAAK;MAE9DA,+BAAuB;MAEnBA,oQAIF;MAAAA,iBAAI;MAEJA,4BAAK;MAEGA,6CAAuB;MAAAA,iBAAK;MAChCA,2BAAI;MAAAA,sDAAgC;MAAAA,iBAAK;MAG7CA,6BAAqB;MACnBA,0ZAMF;MAAAA,iBAAI;MAIVA,sBAAK;MAELA,+BAAsC;MAG7BA,0DAAyC;MAAAA,iBAAI;MAChDA,8BAAwB;MAAAA,aAA4C;MAAAA,iBAAI;MAG5EA,+BAA8B;MAErBA,0DAAyC;MAAAA,iBAAI;MAChDA,8BAAwB;MAAAA,aAA8C;MAAAA,iBAAI;;;MANpDA,gBAA4C;MAA5CA,wEAA4C;MAM1CA,eAA8C;MAA9CA,0EAA8C","names":["RecursaoAlgoritmosRecursivosComponent","constructor","ngOnInit","funcaoEncontraValorElementoMaximo","n","vetor","maiorElementoDentroDeUmVetor","maior","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos.component.ts","E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos\\recursao-algoritmos-recursivos.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recursao-algoritmos-recursivos',\r\n  templateUrl: './recursao-algoritmos-recursivos.component.html',\r\n  styleUrls: ['./recursao-algoritmos-recursivos.component.scss'],\r\n})\r\nexport class RecursaoAlgoritmosRecursivosComponent {\r\n  /* https://www.ime.usp.br/~pf/algoritmos/aulas/recu.html */\r\n\r\n  /*Definindo um vetor*/\r\n  vetor = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n  vetor1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n  /*Definindo o tamanho do vetor*/\r\n  n = 7;\r\n  n1 = 10;\r\n\r\n  constructor() {}\r\n  ngOnInit(): void {}\r\n\r\n  /* 7. Critique a seguinte função recursiva que promete encontrar o valor de um elemento máximo de v[0..n-1]*/\r\n  funcaoEncontraValorElementoMaximo(n: number, vetor: number[]) {\r\n    // Se o n for == 1\r\n    if (n == 1) {\r\n      return vetor[0];\r\n    }\r\n    // Se o n for == 2\r\n    if (n == 2) {\r\n      if (vetor[0] < vetor[1]) {\r\n        return vetor[1];\r\n      } else {\r\n        return vetor[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  /*Definindo uma função que encontra o maior elemento dentro de um vetor*/\r\n  /* Formas diferentes de escrever uma função com recursividade */\r\n  maiorElementoDentroDeUmVetor(vetor: number[], n: number): number {\r\n    /*Caso base*/\r\n    if (n == 1) {\r\n      return vetor[0];\r\n    }\r\n\r\n    let maior = this.maiorElementoDentroDeUmVetor(vetor, n - 1);\r\n    if (maior > vetor[n - 1]) {\r\n      return maior;\r\n    } else {\r\n      return vetor[n - 1];\r\n    }\r\n\r\n    /*Chamada recursiva*/\r\n    // else{\r\n    //   return Math.max(vetor[n-1], this.maiorElementoDentroDeUmVetor(vetor, n-1));\r\n    // }\r\n  }\r\n}\r\n","<div class=\"max-width-card\">\r\n  <h4>Estudo de recursão com algoritmos</h4>\r\n  <div class=\"card-algoritmo-recursao\">\r\n    <!--Criando um card -  para explicar o que é um algoritmo recursivo -->\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5 class=\"card-title\">O que é um Algoritmo de recursão?</h5>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-text\">\r\n          Muitos problemas computacionais têm a seguinte propriedade: cada\r\n          instância do problema contém uma instância menor do mesmo problema.\r\n          Dizemos que esses problemas têm estrutura recursiva. Para resolver uma\r\n          instância de um problema desse tipo, podemos aplicar o seguinte\r\n          método:\r\n        </p>\r\n      </div>\r\n      <!--Criando lista-->\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            Se a instância é pequena, resolva-a diretamente (caso base).\r\n            <p>resolva-a diretamente (use força bruta se necessário);</p>\r\n          </li>\r\n          <li>\r\n            Se a instância é grande, reduza-a a uma instância menor do mesmo\r\n            problema (caso recursivo).\r\n            <p>\r\n              reduza-a a uma instância menor do mesmo problema, aplique o método\r\n              à instância menor, volte à instância original.\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br />\r\n  <div class=\"card-algoritmo-recursao2\">\r\n    <!--Criando um card -  para explicar o que é um algoritmo recursivo -->\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5 class=\"card-title\">Exemplo de algoritmo de recursão</h5>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"card-text\">\r\n          Um exemplo de algoritmo recursivo é o cálculo do fatorial de um\r\n          número. O fatorial de um número n é o produto de todos os números\r\n          inteiros positivos menores ou iguais a n. O fatorial de n é denotado\r\n          por n!.\r\n        </p>\r\n        <!--Criando lista-->\r\n        <div>\r\n          <ul>\r\n            <li>Se n = 0, então n! = 1.</li>\r\n            <li>Se n > 0, então n! = n * (n-1)!.</li>\r\n          </ul>\r\n        </div>\r\n        <p class=\"card-text\">\r\n          Para ilustrar o conceito de algoritmo recursivo, considere o seguinte\r\n          problema: Encontrar o valor de um elemento máximo de um vetor\r\n          v[0..n-1]. (O problema já foi mencionado num dos exercícios na página\r\n          Vetores.) Observe que o problema só faz sentido se o vetor não é\r\n          vazio, ou seja, se n ≥ 1. Eis uma função recursiva que resolve o\r\n          problema:\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <br/>\r\n\r\n  <div class=\"card-algoritmo-recursao3\">\r\n    <div class=\"card card-result\">\r\n      <div>\r\n        <p>Resultado: maiorElementoDentroDeUmVetor()</p>\r\n        <p class=\"color-number\">{{ maiorElementoDentroDeUmVetor(vetor, n) }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"card card-result\">\r\n        <div>\r\n          <p>Resultado: maiorElementoDentroDeUmVetor()</p>\r\n          <p class=\"color-number\">{{ maiorElementoDentroDeUmVetor(vetor1, n1) }}</p>\r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}