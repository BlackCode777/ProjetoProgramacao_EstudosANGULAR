{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AlgoritmosComponent = class AlgoritmosComponent {\n  constructor() {\n    this.algoritmos = [{\n      N: '10',\n      log_N: '3.322',\n      _log_N_: '3'\n    }, {\n      N: '100',\n      log_N: '6.644',\n      _log_N_: '7'\n    }, {\n      N: '1000',\n      log_N: '9.966',\n      _log_N_: '10'\n    }, {\n      N: '10000',\n      log_N: '13.288',\n      _log_N_: '13'\n    }, {\n      N: '100000',\n      log_N: '16.611',\n      _log_N_: '17'\n    }, {\n      N: '1000000',\n      log_N: '19.933',\n      _log_N_: '20'\n    }, {\n      N: '10000000',\n      log_N: '23.255',\n      _log_N_: '23'\n    }, {\n      N: '100000000',\n      log_N: '26.578',\n      _log_N_: '27'\n    }];\n  }\n  NgModule() {\n    this.funcaoLogN_Multiplicacao(this.algoritmos.N);\n  }\n  /*\r\n  O logaritmo na base 2 de um número N é o expoente a que 2 deve ser elevado\r\n  para produzir N.  O logaritmo na base 2 de N é denotado por log N.  É claro\r\n  que log N só está definido se N é estritamente positivo.\r\n  */\n  // creating function for calculate logarithm base 2 N, log N, number positive\n  funcaoLogN_Divisao(N) {\n    let i = 0;\n    let n = 1;\n    while (n > 1) {\n      n = 2 / n;\n      i += 1;\n    }\n    return i;\n  }\n  funcaoLogN_Multiplicacao(N) {\n    let i = 0;\n    let n = 1;\n    while (n <= N / 2) {\n      n = 2 * n;\n      i += 1;\n    }\n    return i;\n  }\n};\nAlgoritmosComponent = __decorate([Component({\n  selector: 'app-algoritmos',\n  templateUrl: './algoritmos.component.html',\n  styleUrls: ['./algoritmos.component.scss']\n})], AlgoritmosComponent);\nexport { AlgoritmosComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAkB,eAAe;AAO5C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAa9BC;IAXA,eAAU,GAAe,CACvB;MAAEC,CAAC,EAAE,IAAI;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAG,CAAE,EACzC;MAAEF,CAAC,EAAE,KAAK;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAG,CAAE,EAC1C;MAAEF,CAAC,EAAE,MAAM;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAI,CAAE,EAC5C;MAAEF,CAAC,EAAE,OAAO;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EAC9C;MAAEF,CAAC,EAAE,QAAQ;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EAC/C;MAAEF,CAAC,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EAChD;MAAEF,CAAC,EAAE,UAAU;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,EACjD;MAAEF,CAAC,EAAE,WAAW;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAI,CAAE,CACnD;EAEe;EAChBC,QAAQ;IACT,IAAI,CAACC,wBAAwB,CAAE,IAAI,CAACC,UAAU,CAACL,CAAC,CAAE;EACjD;EAEA;;;;;EAKD;EACAM,kBAAkB,CAAEN,CAAS;IAC7B,IAAIO,CAAC,GAAG,CAAC;IACT,IAAIC,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,CAAC,EAAE;MACbA,CAAC,GAAG,CAAC,GAAGA,CAAC;MACTD,CAAC,IAAI,CAAC;;IAEP,OAAOA,CAAC;EACR;EAEAH,wBAAwB,CAAEJ,CAAS;IACnC,IAAIO,CAAC,GAAG,CAAC;IACT,IAAIC,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,IAAIR,CAAC,GAAC,CAAC,EAAE;MAChBQ,CAAC,GAAG,CAAC,GAAGA,CAAC;MACTD,CAAC,IAAI,CAAC;;IAEP,OAAOA,CAAC;EACR;CAEA;AA5CYT,mBAAmB,eAL/BD,SAAS,CAAC;EACTY,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWb,mBAAmB,CA4C/B;SA5CYA,mBAAmB","names":["Component","AlgoritmosComponent","constructor","N","log_N","_log_N_","NgModule","funcaoLogN_Multiplicacao","algoritmos","funcaoLogN_Divisao","i","n","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\ProjetosProgramacao_2023\\ProjetoProgramacao_EstudosANGULAR\\ProjetoProgramacao_EstudosANGULAR\\algoritmos\\src\\app\\algoritmos\\algoritmos\\algoritmos.component.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\n\n@Component({\n  selector: 'app-algoritmos',\n  templateUrl: './algoritmos.component.html',\n  styleUrls: ['./algoritmos.component.scss']\n})\nexport class AlgoritmosComponent {\n\n  algoritmos: Array<any> = [ \n    { N: '10', log_N: '3.322', _log_N_: '3' },\n    { N: '100', log_N: '6.644', _log_N_: '7' },\n    { N: '1000', log_N: '9.966', _log_N_: '10' },\n    { N: '10000', log_N: '13.288', _log_N_: '13' },\n    { N: '100000', log_N: '16.611', _log_N_: '17' },\n    { N: '1000000', log_N: '19.933', _log_N_: '20' },\n    { N: '10000000', log_N: '23.255', _log_N_: '23' },\n    { N: '100000000', log_N: '26.578', _log_N_: '27' },\n  ];\n\n  constructor() { }\n  NgModule() {\n\tthis.funcaoLogN_Multiplicacao( this.algoritmos.N );\n  }\n\n  /*\n  O logaritmo na base 2 de um número N é o expoente a que 2 deve ser elevado \n  para produzir N.  O logaritmo na base 2 de N é denotado por log N.  É claro \n  que log N só está definido se N é estritamente positivo.\n  */\n // creating function for calculate logarithm base 2 N, log N, number positive\n funcaoLogN_Divisao( N: number ){\t\n\tlet i = 0;\n\tlet n = 1;\n\twhile (n > 1) {\n\t\tn = 2 / n;\n\t\ti += 1;\n\t}\n\treturn i;\n }\n \n funcaoLogN_Multiplicacao( N: number ){\t\n\tlet i = 0;\n\tlet n = 1;\n\twhile (n <= N/2) {\n\t\tn = 2 * n;\n\t\ti += 1;\n\t}\n\treturn i;\n }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}